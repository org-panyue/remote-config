//通用配置
ext {

    maven = [
         username: 'admin',
         password: 'admin123',
         repository: 'http://101.37.87.61:8085/repository/yichi/'
    ]

    app_versions = [
            versionCode: 1,
            versionName: "1.0.0"
    ]

    build_versions = [
            minSdk    : 21,
            targetSdk : 34,
            compileSdk: 34,
            java      : JavaVersion.VERSION_1_8,
            jvmTarget : '1.8'
    ]


    deps = [

            //插件依赖
            plugin: [
                    agp: "com.android.tools.build:gradle:8.2.2",
                    kgp: "org.jetbrains.kotlin:kotlin-gradle-plugin:1.9.22",
                    appLifecycleDispatchPlugin: "com.yichi.plugin:AppLifecycleDispatchPlugin:1.5.3",
            ],

            //Application 声明周期分发
            appLifeDispatch: [
                    annotation: 'com.yichi:AppLifecycleDispatch-Annotation:1.5.0',
                    processor: 'com.yichi:AppLifecycleDispatch-Processor:1.5.0',
                    api: 'com.yichi:AppLifecycleDispatch-Api:1.5.3',
            ],

            //unit test
            unitTest: [
                    junit: 'junit:junit:4.13.2',
                    junitVersion: 'androidx.test.ext:junitVersion:1.1.5',
                    espressoCore: 'androidx.test.espresso:espresso-core:3.5.1'
            ],

            //AndroidX 官方库
            androidx: [
                    appcompat: "androidx.appcompat:appcompat:1.6.1",
                    material: 'com.google.android.material:material:1.11.0',
                    multidex: 'androidx.multidex:multidex:2.0.1',
                    ktx: [
                            viewModelKtx: 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.7.0',
                            fragmentKtx: 'androidx.fragment:fragment-ktx:1.6.2'
                    ]
            ],

            //kotlin
            kotlin: [
                    // 扩展库
                    android_core_ktx    : "androidx.core:core-ktx:1.12.0",
            ],

            //路由
            router: [
                    api: 'com.alibaba:arouter-api:1.5.2',
                    compiler: 'com.alibaba:arouter-compiler:1.5.2'
            ],

            //一些出名的三方库
            thirdLib: [
                    utilCode: 'com.blankj:utilcodex:1.31.1',
                    stateView: 'com.github.nukc:StateView:v3.0.2',
                    rxjava: 'io.reactivex.rxjava3:rxjava:3.1.5',
                    rxandroid: 'io.reactivex.rxjava3:rxandroid:3.0.1',
                    rxbinding: 'com.jakewharton.rxbinding4:rxbinding:4.0.0',
                    fragmentationx: 'me.yokeyword:fragmentationx:1.0.2',
                    background: 'com.github.JavaNoober.BackgroundLibrary:libraryx:1.7.6',
                    rxlife: 'com.github.liujingxing.rxlife:rxlife-rxjava3:2.2.2',
                    okhttp: 'com.squareup.okhttp3:okhttp:4.12.0',
                    rxhttp: "com.github.liujingxing.rxhttp:rxhttp:3.2.5",
                    rxHttpCompiler: "com.github.liujingxing.rxhttp:rxhttp-compiler:3.2.5",
                    toaster: 'com.github.getActivity:Toaster:12.6',
                    dialogx: "com.github.kongzue.DialogX:DialogX:0.0.50.beta11",
                    xlog: 'com.elvishew:xlog:1.11.0',
                    verifyInputView: 'com.github.Wynsbin:VerificationCodeInputView:1.0.2'
            ],

            //一些必要的第三方功能库
            thirdFunction: [
                    // 极光一键登录
                    jverify: 'cn.jiguang.sdk:jverification:3.1.7'
            ],



            //yichi 自己封装编写的库
            yichi: [
                    module_base: 'com.yichi:base-core:1.0.5-SNAPSHOT',
                    router: 'com.yichi:module-router:1.0.3-SNAPSHOT',
                    http: 'com.yichi:http:1.0.1-SNAPSHOT'
            ],

            //yichi 业务组件
            businessComponent: [
                    //home
                    home_export: "com.yichi:home-export:1.0.0",
                    //dynamic
                    dynamic_export: "com.yichi:dynamic-export:1.0.3-SNAPSHOT",
                    //msg
                    msg_export: "com.yichi:msg-export:1.0.0",
                    //mine
                    mine_export: "com.yichi:mine-export:1.0.0"
            ]

    ]

    addRepos = this.&addRepos
}


//添加仓库
def addRepos(RepositoryHandler handler) {
    //Google 仓库
    handler.google()
    //Maven 仓库
    handler.mavenCentral()
    //gradle 插件仓库
    handler.gradlePluginPortal()
    //jitpack 仓库
    handler.maven {
        url 'https://jitpack.io'
    }
    //jcenter 阿里云镜像仓库
    handler.maven {
        url 'https://maven.aliyun.com/repository/jcenter'
    }
    handler.maven {
        allowInsecureProtocol true
        credentials {
            username maven.username
            password maven.password
        }
        url maven.repository
    }
}


//application 和 library 统一配置
ext {
    //设置App配置
    setAppDefaultConfig = {
        extension ->
            //Android 插件
            extension.apply plugin: 'com.android.application'
            //kotlin 插件
            extension.apply plugin: 'org.jetbrains.kotlin.android'
            //kotlin-kapt
            extension.apply plugin: 'kotlin-kapt'
            //kotlin-parcelize
            extension.apply plugin: 'kotlin-parcelize'
            //描述
            extension.description "app"
            //配置
            setAndroidConfig extension.android

            extension.configurations.all {
                resolutionStrategy {
                    //强制版本

                }
            }

            setDependencies extension.dependencies
//            setGlobalExcludeLib extension.configurations

    }

    //设置Lib配置
    setLibDefaultConfig = {
        extension ->
            //库插件
            extension.apply plugin: 'com.android.library'
            //kotlin 插件
            extension.apply plugin: 'org.jetbrains.kotlin.android'
            //kotlin-kapt
            extension.apply plugin: 'kotlin-kapt'
            //kotlin-parcelize
            extension.apply plugin: 'kotlin-parcelize'
            //描述
            extension.description "lib"
            //配置
            setAndroidConfig extension.android


            extension.configurations.all {
                resolutionStrategy {


                }

            }

            setDependencies extension.dependencies
//            setGlobalExcludeLib extension.configurations
    }


    //设置Android配置
    setAndroidConfig = {
        extension ->
            extension.compileSdk build_versions.compileSdk
            extension.defaultConfig {
                minSdk build_versions.minSdk
                targetSdk build_versions.targetSdk
                versionCode app_versions.versionCode
                versionName app_versions.versionName

                testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

                javaCompileOptions {
                    annotationProcessorOptions {
                        arguments = [AROUTER_MODULE_NAME: project.getName()]
                        println 'AROUTER_MODULE_NAME：' + project.getName()
                    }
                }
            }


            extension.sourceSets {
                main {
                    jniLibs.srcDirs = ['libs']
                    java.srcDirs = ['src/main/java']
                    res.srcDirs = ['src/main/res']
                }
            }

            extension.compileOptions {
                sourceCompatibility build_versions.java
                targetCompatibility build_versions.java
            }

            extension.kotlinOptions {
                jvmTarget = build_versions.jvmTarget
            }
    }


    //设置依赖
    setDependencies = {
        extension ->
            extension.implementation fileTree(dir: 'libs', include: ['*.jar'])

            extension.implementation deps.kotlin.android_core_ktx
            extension.implementation deps.androidx.appcompat
            extension.implementation deps.androidx.material

            //路由
            extension.implementation deps.yichi.router
            extension.kapt deps.router.compiler

            //unit test
//            extension.implementation deps.unitTest.junit
//            extension.androidTestImplementation deps.unitTest.junitVersion
//            extension.androidTestImplementation deps.unitTest.espressoCore
    }

    //设置全局排除
//    setGlobalExcludeLib = {
//        extension ->
//            extension.all*.exclude group: 'com.android.support', module: 'support-compat'
//            extension.all*.exclude group: 'com.android.support', module: 'versionedparcelable'
//    }
}

